{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usr\\\\Desktop\\\\training\\\\pruebaTecnica\\\\react-crud\\\\src\\\\components\\\\DataTable\\\\DataTable.js\",\n  _s = $RefreshSig$();\n// src/components/DataTable/DataTable.js\nimport React, { useState, useEffect } from 'react';\nimport api from '../../services/api';\nimport { Table, Pagination, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(40); // Ajusta el número de elementos por página según tu preferencia\n\n  useEffect(() => {\n    fetchData();\n  }, [currentPage]);\n  const fetchData = async () => {\n    try {\n      const response = await api.get('/data');\n      // Añade la propiedad 'onDelete' a cada objeto de datos\n      const dataWithActions = response.data.map(item => ({\n        ...item,\n        onDelete: () => handleDelete(item.id)\n      }));\n      setData(dataWithActions);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  // Función para manejar la eliminación de un registro\n  const handleDelete = async id => {\n    try {\n      await api.delete(`/data/${id}`);\n      fetchData(); // Actualiza los datos después de la eliminación\n    } catch (error) {\n      console.error('Error deleting data:', error);\n    }\n  };\n\n  // Calcula el índice del último elemento en la página actual\n  const indexOfLastItem = currentPage * itemsPerPage;\n  // Calcula el índice del primer elemento en la página actual\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  // Obtiene los elementos de la página actual\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"4\",\n            children: \"No hay registros\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this) : currentItems.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: item.onDelete,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      children: [...Array(Math.ceil(data.length / itemsPerPage)).keys()].map(number => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n        active: number + 1 === currentPage,\n        onClick: () => paginate(number + 1),\n        children: number + 1\n      }, number + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(DataTable, \"c+J9BQfEv6A7YlDGLr3xrlwNJ24=\");\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useState","useEffect","api","Table","Pagination","Button","jsxDEV","_jsxDEV","DataTable","_s","data","setData","currentPage","setCurrentPage","itemsPerPage","fetchData","response","get","dataWithActions","map","item","onDelete","handleDelete","id","error","console","delete","indexOfLastItem","indexOfFirstItem","currentItems","slice","paginate","pageNumber","children","striped","bordered","hover","responsive","fileName","_jsxFileName","lineNumber","columnNumber","length","colSpan","name","description","variant","onClick","Array","Math","ceil","keys","number","Item","active","_c","$RefreshReg$"],"sources":["C:/Users/usr/Desktop/training/pruebaTecnica/react-crud/src/components/DataTable/DataTable.js"],"sourcesContent":["// src/components/DataTable/DataTable.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport api from '../../services/api';\r\nimport { Table, Pagination, Button } from 'react-bootstrap';\r\nconst DataTable = () => {\r\n    const [data, setData] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(40); // Ajusta el número de elementos por página según tu preferencia\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [currentPage]);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await api.get('/data');\r\n      // Añade la propiedad 'onDelete' a cada objeto de datos\r\n      const dataWithActions = response.data.map(item => ({\r\n        ...item,\r\n        onDelete: () => handleDelete(item.id)\r\n      }));\r\n      setData(dataWithActions);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n// Función para manejar la eliminación de un registro\r\nconst handleDelete = async (id) => {\r\n    try {\r\n      await api.delete(`/data/${id}`);\r\n      fetchData(); // Actualiza los datos después de la eliminación\r\n    } catch (error) {\r\n      console.error('Error deleting data:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // Calcula el índice del último elemento en la página actual\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  // Calcula el índice del primer elemento en la página actual\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  // Obtiene los elementos de la página actual\r\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Table striped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Description</th>\r\n            <th>Actions</th> {/* Nueva columna para acciones */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.length === 0 ? (\r\n            <tr>\r\n              <td colSpan=\"4\">No hay registros</td>\r\n            </tr>\r\n          ) : (\r\n            currentItems.map((item) => (\r\n              <tr key={item.id}>\r\n                <td>{item.id}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.description}</td>\r\n                <td>\r\n                  {/* Botón para la acción de eliminar */}\r\n                  <Button variant=\"danger\" onClick={item.onDelete}>\r\n                    Delete\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n      <Pagination>\r\n        {[...Array(Math.ceil(data.length / itemsPerPage)).keys()].map((number) => (\r\n          <Pagination.Item key={number + 1} active={number + 1 === currentPage} onClick={() => paginate(number + 1)}>\r\n            {number + 1}\r\n          </Pagination.Item>\r\n        ))}\r\n      </Pagination>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}