{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usr\\\\Desktop\\\\training\\\\pruebaTecnica\\\\react-crud\\\\src\\\\components\\\\Form\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormComponent = props => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    description: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Validar que solo se ingresen letras\n    if (/^[a-zA-Z\\s]*$/.test(value) || value === '') {\n      setFormData(prevData => ({\n        ...prevData,\n        [name]: value\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await api.post('/data', formData);\n      setFormData({\n        name: '',\n        description: ''\n      }); // Limpiar el formulario después de enviar\n      props.onDataAdded(); // Notificar al componente padre que se han añadido datos\n    } catch (error) {\n      console.error('Error submitting form:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formName\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Nombre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleInputChange,\n        pattern: \"[a-zA-Z\\\\s]*\",\n        title: \"Solo se permiten letras\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formDescription\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Apellido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        name: \"description\",\n        value: formData.description,\n        onChange: handleInputChange,\n        pattern: \"[a-zA-Z\\\\s]*\",\n        title: \"Solo se permiten letras\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Agregar a la lista\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(FormComponent, \"9vS6zr6jmdkLxzUKtWZ28S9MRX8=\");\n_c = FormComponent;\nexport default FormComponent;\nvar _c;\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"names":["React","useState","Form","Button","api","jsxDEV","_jsxDEV","FormComponent","props","_s","formData","setFormData","name","description","handleInputChange","e","value","target","test","prevData","handleSubmit","preventDefault","post","onDataAdded","error","console","onSubmit","children","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","onChange","pattern","title","required","variant","_c","$RefreshReg$"],"sources":["C:/Users/usr/Desktop/training/pruebaTecnica/react-crud/src/components/Form/Form.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport api from '../../services/api';\r\n\r\nconst FormComponent = (props) => {\r\n  const [formData, setFormData] = useState({ name: '', description: '' });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    // Validar que solo se ingresen letras\r\n    if (/^[a-zA-Z\\s]*$/.test(value) || value === '') {\r\n      setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await api.post('/data', formData);\r\n      setFormData({ name: '', description: '' }); // Limpiar el formulario después de enviar\r\n      props.onDataAdded(); // Notificar al componente padre que se han añadido datos\r\n    } catch (error) {\r\n      console.error('Error submitting form:', error);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group controlId=\"formName\">\r\n        <Form.Label>Nombre</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleInputChange}\r\n          pattern=\"[a-zA-Z\\s]*\"\r\n          title=\"Solo se permiten letras\"\r\n          required\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formDescription\">\r\n        <Form.Label>Apellido</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          name=\"description\"\r\n          value={formData.description}\r\n          onChange={handleInputChange}\r\n          pattern=\"[a-zA-Z\\s]*\"\r\n          title=\"Solo se permiten letras\"\r\n          required\r\n        />\r\n      </Form.Group>\r\n\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Agregar a la lista\r\n      </Button>\r\n      \r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}